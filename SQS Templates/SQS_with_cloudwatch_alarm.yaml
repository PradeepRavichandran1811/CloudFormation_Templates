Parameters:
  NotifyEmail:
    Description: Email address to notify if there are any issues
    Type: String
    AllowedPattern: "([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)" #regex to validate email
    ConstraintDescription: Enter a valid email address.
Resources:
  SQSqueue:
    Type: AWS::SQS::Queue
    Properties: 
      QueueName: "MyNewQueue"
  AlarmTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
      - Endpoint:
          Ref: NotifyEmail #referencing the value passed by the user from parameters
        Protocol: email
  QueueDepthThreshold:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: To notify if queue depth grows beyond 10 messages
      Namespace: AWS/SQS
      MetricName: ApproximateNumberOfMessagesVisible
      Dimensions:
      - Name: QueueName
        Value:
          Fn::GetAtt:
          - SQSqueue
          - QueueName
      Statistic: Sum
      Period: '300'
      EvaluationPeriods: '1'
      Threshold: '10'
      ComparisonOperator: GreaterThanThreshold
      AlarmActions:
      - Ref: AlarmTopic #referencing SNS topic to notify
      InsufficientDataActions:
      - Ref: AlarmTopic 
Outputs:
  SQSqueueLink:
    Description: URL of created SQS Queue
    Value:
      Ref: SQSqueue
  SQSqueueARN:
    Description: ARN of created SQS Queue
    Value:
      Fn::GetAtt: #to get ARN attribute from the created queue
      - SQSqueue
      - Arn
  SQSqueueName:
    Description: Name of newly created SQS Queue
    Value:
      Fn::GetAtt: #to get the QueueName attribute from the created queue
      - SQSqueue
      - QueueName
